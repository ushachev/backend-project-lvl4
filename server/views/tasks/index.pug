extends ../layouts/application.pug

block content
  - const isQueried = !isEmpty(query)
  .row.mb-2
    .col-auto.d-flex.align-items-center
      a.pl-3(href=route('newTask'))
        +icon('circle-plus')
        span.ml-2= t('views.tasks.index.create')
    .col-auto
      button.btn.btn-link(type='button', data-toggle='collapse', data-target='#filterTasks')
        +icon('filter')
        span.ml-2= t('views.tasks.index.filter')
  .row
    .col
      #filterTasks.collapse(class= isQueried ? 'show' : '')
        form.mb-3(action=route('tasks'), method='get')
          .form-row
            .col-12.col-sm-4
              .form-group
                label(for='data_status')= t('views.tasks.index.status')
                select.form-control(name='status', id='data_status')
                  option
                  each status in statuses
                    option(value= status.id, selected= (query.status == status.id))= status.name
            .col-12.col-sm-4
              .form-group
                label(for='data_executor')= t('views.tasks.index.executor')
                select.form-control(name='executor', id='data_executor')
                  option
                  each user in users
                    option(value= user.id, selected= (query.executor == user.id))= user.fullName
            .col-12.col-sm-4
              .form-group
                label(for='data_label')= t('views.tasks.index.label')
                select.form-control(name='label', id='data_label')
                  option
                  each label in labels
                    option(value= label.id, selected= (query.label == label.id))= label.name
          .form-row.justify-content-sm-end.align-items-center
            .col-auto.mb-3.mb-sm-0
              .custom-control.custom-checkbox
                  input.custom-control-input(type='checkbox', id='data_isCreatorUser', name='isCreatorUser', checked= query.isCreatorUser)
                  label.custom-control-label(for='data_isCreatorUser')= t('views.tasks.index.onlyMyTasks')
            .col-12.col-sm-4
              +submit(t('views.tasks.index.submit'))(class='btn-block')
  if !isEmpty(tasks)
    .row
      .col.overflow-auto
        table.table.table-striped.table-hover
          thead
            tr
              th= t('views.tasks.index.id')
              th= t('views.tasks.index.name')
              th= t('views.tasks.index.status')
              th= t('views.tasks.index.author')
              th= t('views.tasks.index.executor')
              th= t('views.tasks.index.createdAt')
              th
          tbody
            each task in tasks
              tr
                td= task.id
                td
                  a(href=route('task', { id: task.id }))
                    span= task.name
                td= task.status.name
                td= task.creator.fullName
                td= task.executor ? task.executor.fullName : t('views.tasks.index.notAssigned')
                td= formatDate(task.createdAt)
                td.text-right
                  a(href=route('editTask', { id: task.id }), data-toggle='tooltip', data-placement='auto', title=t('views.tasks.index.change'))
                    +icon('pencil')
  else
    .row
      .col
        p.pt-3.border-top.border-secondary.text-center= isQueried ? t('views.tasks.index.notFound') : t('views.tasks.index.empty')